diff --git a/detached-list.el b/detached-list.el
index 66ceafd..daed53e 100644
--- a/detached-list.el
+++ b/detached-list.el
@@ -859,19 +859,43 @@ If prefix-argument is provided unmark instead of mark."
                   (member (symbol-name (detached-session-id it)) session-ids))
                 sessions)))
 
+(defun detached-tail-session (session)
+  "Tail -f SESSION log."
+  (interactive
+   (list (detached-session-in-context)))
+  (when (detached-valid-session session)
+    (let* ((id (detached-session-id session))
+           (buffer-name (format "*detached-tail:%s*" id))
+           (file-path
+            (detached--session-file session 'log))
+           (tramp-verbose 1))
+      (if (file-exists-p file-path)
+          (progn
+            (async-shell-command (format "tail -f %s" file-path) buffer-name))
+        (message "Detached can't find file: %s" file-path)))))
+
+(defun detached-jump-to-dired-directory (session)
+  "Jump to the directory where SESSION is run."
+  (interactive
+   (list (detached-session-in-context)))
+  (when (detached-valid-session session)
+    (dired (detached--working-dir-str session))))
+
 ;;;; Major mode
 
 (defvar detached-list-mode-map
   (let ((map (make-sparse-keymap)))
-    (define-key map (kbd "a") #'detached-edit-session-annotation)
+    (define-key map (kbd "A") #'detached-edit-session-annotation)
+    (define-key map (kbd "a") #'detached-attach-session)
     (define-key map (kbd "d") #'detached-list-delete-session)
     (define-key map (kbd "e") #'detached-edit-and-run-session)
     (define-key map (kbd "f") #'detached-list-select-filter)
     (define-key map (kbd "g") #'detached-list-revert)
     (define-key map (kbd "i") #'detached-list-initialize-session-directory)
-    (define-key map (kbd "j") #'imenu)
     (define-key map (kbd "k") #'detached-list-kill-session)
     (define-key map (kbd "m") #'detached-list-mark-session)
+    (define-key map (kbd "l") #'detached-tail-session)
+    (define-key map (kbd "j") #'detached-jump-to-dired-directory)
     ;; Narrow
     (define-key map (kbd "n a") #'detached-list-narrow-annotation)
     (define-key map (kbd "n c") #'detached-list-narrow-command)
diff --git a/detached.el b/detached.el
index 7eda4df..f6b1770 100644
--- a/detached.el
+++ b/detached.el
@@ -446,14 +446,18 @@ This version is encoded as [package-version].[revision].")
 Optionally SUPPRESS-OUTPUT if prefix-argument is provided."
   (interactive
    (list
-    (read-shell-command (if shell-command-prompt-show-cwd
-                            (format-message "Detached shell command in `%s': "
-                                            (abbreviate-file-name
-                                             default-directory))
-                          "Detached shell command: ")
-                        (when detached-shell-command-initial-input
-                          (car detached-shell-command-history))
-                        'detached-shell-command-history)
+    (let* ((lastcommand (car detached-shell-command-history))
+           (history-prompt
+            (if lastcommand
+                (format " (%s)" lastcommand) ""))
+           (command
+            (read-shell-command (if shell-command-prompt-show-cwd
+                                    (format-message "Detached `%s'%s: "
+                                                    (abbreviate-file-name
+                                                     default-directory) history-prompt)
+                                  (format "Detached%s: " history-prompt)) nil
+                                  'detached-shell-command-history lastcommand)))
+      (if (and (string-empty-p command) lastcommand) lastcommand command))
     current-prefix-arg))
   (let* ((detached-session-origin (or detached-session-origin 'shell-command))
          (detached-session-action (or detached-session-action
